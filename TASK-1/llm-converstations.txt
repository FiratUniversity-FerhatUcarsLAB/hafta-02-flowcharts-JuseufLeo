Merhaba 
TM para ¸cekme sistemi i¸cin detaylı pseudocode yazmanı istiyorum. 
 S¸unları i¸cermeli: PIN do˘grulama (3 hak), bakiye kontrol¨u, tutar
 kontrol¨u (20 TL katları), g¨unl¨uk limit kontrol¨u, i¸slem tekrarı se¸cene˘gi. T¨um
 adımları BAS¸LA, OKU, YAZ, E˘ GER-˙ ISE, D¨ ONG¨ U yapılarıyla yaz.
✅ Özellikler:

PIN doğrulama (3 hak)

Bakiye kontrolü

Tutar kontrolü (20 TL katı)

Günlük limit kontrolü

İşlem tekrarı seçeneği
💻 Pseudocode (Türkçe anahtar kelimelerle):
BAŞLA

    // Sabitler ve başlangıç değerleri
    PIN_KODU ← 1234
    GÜNLÜK_LİMİT ← 2000
    bakiye ← 5000
    günlük_çekilen ← 0
    pin_hak ← 3

    // PIN doğrulama
    DÖNGÜ pin_hak > 0 TEKRAR
        YAZ "Lütfen 4 haneli PIN kodunuzu girin:"
        OKU girilen_pin

        EĞER girilen_pin = PIN_KODU İSE
            ÇIK // PIN doğruysa döngüden çık
        DEĞİLSE
            pin_hak ← pin_hak - 1
            YAZ "Hatalı PIN. Kalan deneme hakkı: ", pin_hak
        SON

    SONDÖNGÜ

    EĞER pin_hak = 0 İSE
        YAZ "Kart bloke oldu. Lütfen banka ile iletişime geçin."
        DUR
    SON

    // Ana işlem döngüsü
    DÖNGÜ TRUE TEKRAR

        YAZ "Çekmek istediğiniz tutarı girin:"
        OKU cekilecek_tutar

        // Tutar kontrolü
        EĞER cekilecek_tutar MOD 20 ≠ 0 İSE
            YAZ "Tutar 20 TL'nin katı olmalıdır."
            DEVAM ET // döngünün başına dön
        SON

        // Günlük limit kontrolü
        EĞER günlük_çekilen + cekilecek_tutar > GÜNLÜK_LİMİT İSE
            YAZ "Günlük limit aşılıyor. Kalan günlük limit: ", GÜNLÜK_LİMİT - günlük_çekilen
            DEVAM ET
        SON

        // Bakiye kontrolü
        EĞER cekilecek_tutar > bakiye İSE
            YAZ "Yetersiz bakiye. Mevcut bakiye: ", bakiye
            DEVAM ET
        SON

        // İşlem başarılı
        bakiye ← bakiye - cekilecek_tutar
        günlük_çekilen ← günlük_çekilen + cekilecek_tutar

        YAZ cekilecek_tutar, " TL başarıyla çekildi."
        YAZ "Kalan bakiye: ", bakiye
        YAZ "Bugün çekilen toplam tutar: ", günlük_çekilen

        // Tekrar işlem seçeneği
        YAZ "Başka bir işlem yapmak istiyor musunuz? (E/H)"
        OKU cevap

        EĞER cevap = "H" VEYA cevap = "h" İSE
            YAZ "İyi günler dileriz."
            DUR
        SON

    SONDÖNGÜ

DUR
🔍 Açıklamalar:

MOD işlemi: MOD 20 ≠ 0 kontrolü, tutarın 20'nin katı olup olmadığını kontrol eder.

DEVAM ET: Bir sorun varsa döngünün başına döner ve kullanıcıdan yeni giriş istenir.

DUR: Programı sonlandırır.

ÇIK: Döngüden çıkmayı sağlar, örneğin PIN doğru girildiğinde.
İstersen bu pseudocode'u Python veya başka bir programlama diline de çevirebilirim. Yardımcı olayım mı?
Bu pseudocode'u DOT diline çevirir misin
Elbette! DOT dili, aslında graf yapıları tanımlamak için kullanılan bir betik dilidir ve genellikle Graphviz aracıyla görselleştirme amacıyla kullanılır. Bu nedenle DOT dili, klasik bir programlama veya pseudocode dili gibi akış kontrol ifadeleri içermez.

Ancak senin ATM para çekme pseudocode’unu akış diyagramı (flowchart) şeklinde DOT diline dönüştürebiliriz.
✅ DOT diliyle ATM para çekme sisteminin akış diyagramı:
digraph ATM {
    rankdir=TB;
    node [shape=box, style=rounded];

    Start [label="BAŞLA", shape=ellipse];
    SetVars [label="PIN = 1234\nbakiye = 5000\nlimit = 2000\ngünlük_çekilen = 0\nhak = 3"];
    
    CheckPIN [label="PIN gir\nDoğru mu?"];
    PinWrong [label="Hatalı PIN\nhak = hak - 1"];
    Blocked [label="Kart bloke oldu\nDUR", shape=doublecircle];
    AskAmount [label="Tutar gir"];
    
    ModCheck [label="20'nin katı mı?"];
    LimitCheck [label="Günlük limit aşılıyor mu?"];
    BakiyeCheck [label="Yetersiz bakiye var mı?"];
    Success [label="Para ver\nbakiye -= tutar\ngünlük_çekilen += tutar"];
    
    Again [label="Tekrar işlem? (E/H)"];
    End [label="İyi günler\nDUR", shape=doublecircle];

    // PIN doğrulama akışı
    Start -> SetVars -> CheckPIN;
    CheckPIN -> AskAmount [label="Evet"];
    CheckPIN -> PinWrong [label="Hayır"];
    PinWrong -> CheckPIN [label="hak > 0"];
    PinWrong -> Blocked [label="hak = 0"];

    // Tutar ve işlem kontrolleri
    AskAmount -> ModCheck;
    ModCheck -> AskAmount [label="Hayır"];
    ModCheck -> LimitCheck [label="Evet"];
    
    LimitCheck -> AskAmount [label="Aşıyor"];
    LimitCheck -> BakiyeCheck [label="Aşmıyor"];
    
    BakiyeCheck -> AskAmount [label="Yetersiz"];
    BakiyeCheck -> Success [label="Yeterli"];
    
    Success -> Again;
    Again -> AskAmount [label="E"];
    Again -> End [label="H"];
}

🔧 Görselleştirme

Bu kodu bir .dot dosyasına yapıştırıp Graphviz ile görselleştirebilirsin:
dot -Tpng atm.dot -o atm.png

📝 Notlar:

DOT dilinde nodelar adım adım işlemleri, edgeler (oklar) ise geçişleri ifade eder.

Koşullar label olarak okların üzerinde gösterilir.

shape=ellipse veya doublecircle, genellikle başlama ve bitiş düğümleri için kullanılır.
İstersen bu akış diyagramının görselini de oluşturabilirim ya da bir web aracı üzerinde denemeni sağlayacak bir öneride bulunabilirim. Yardım edeyim mi?
Hayır teşekkür ederim bu kadar yeterli
Rica ederim, her zaman yardımcı olmaktan memnuniyet duyarım. Başka bir şeye ihtiyacın olursa buradayım. Kolaylıklar dilerim! 😊
Bana bu sistemi 5-6 satırda kısa özetler misin
Elbette, işte ATM para çekme sisteminin 5-6 satırlık kısa özeti:

Kullanıcıdan 3 deneme hakkıyla PIN girişi istenir; 3 yanlış girişte kart bloke olur.

Doğru PIN girildiyse para çekme işlemine geçilir.

Girilen tutarın 20 TL’nin katı olup olmadığı kontrol edilir.

Günlük para çekme limiti ve bakiye yetersizliği kontrol edilir.

Tüm kontroller geçilirse para çekilir, bakiye ve günlük toplam güncellenir.

Kullanıcıya başka işlem yapmak isteyip istemediği sorulur.

Hazır! Başka bir özet ya da detay istersen söylemen yeterli.
